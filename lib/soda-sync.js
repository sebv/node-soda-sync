// Generated by CoffeeScript 1.4.0
(function() {
  var buildOptions, current, makeSync, patch, soda, sodaSync, sync, _ref;

  soda = require("soda");

  _ref = require('make-sync'), makeSync = _ref.makeSync, sync = _ref.sync, current = _ref.current;

  buildOptions = {
    mode: 'sync',
    exclude: '*',
    include: soda.commands.concat(['session'])
  };

  patch = function(browser, options) {
    var _sync;
    makeSync(browser, buildOptions);
    browser.queue = null;
    _sync = function(cb) {
      if (cb != null) {
        return sync(function() {
          current().soda_sync_browser = browser;
          return cb.apply(browser, []);
        });
      }
    };
    return {
      browser: browser,
      sync: _sync
    };
  };

  sodaSync = {
    createClient: function(options) {
      return patch(soda.createClient(options), options);
    },
    createSauceClient: function(options) {
      return patch(soda.createSauceClient(options), options);
    },
    current: function() {
      return current().soda_sync_browser;
    },
    can: function(globalOptions) {
      return function(options, cb) {
        var _ref1;
        if (typeof options === 'function') {
          _ref1 = [null, options], options = _ref1[0], cb = _ref1[1];
        }
        if (cb != null) {
          return function(done) {
            if ((globalOptions != null ? globalOptions.pre : void 0) != null) {
              globalOptions.pre.apply(this, []);
            }
            if ((options != null ? options.pre : void 0) != null) {
              options.pre.apply(this, []);
            }
            return sync(function() {
              current().soda_sync_browser = globalOptions != null ? typeof globalOptions["with"] === "function" ? globalOptions["with"]() : void 0 : void 0;
              cb.apply(globalOptions != null ? typeof globalOptions["with"] === "function" ? globalOptions["with"]() : void 0 : void 0, []);
              if (done != null) {
                return done();
              }
            });
          };
        }
      };
    }
  };

  module.exports = sodaSync;

}).call(this);
