// Generated by CoffeeScript 1.3.1
(function() {
  var MakeSync, Soda, Sync, buildOptions, cleanArgs, soda, sodaSync, _ref;

  soda = require("soda");

  _ref = require('make-sync'), MakeSync = _ref.MakeSync, Sync = _ref.Sync;

  buildOptions = function(mode) {
    if (!(mode != null)) {
      mode = 'sync';
    }
    return {
      mode: mode,
      exclude: ['enqueue', 'command', 'emit', 'commandPath']
    };
  };

  sodaSync = {
    createClient: function(options) {
      var browser;
      browser = soda.createClient(options);
      if (((options != null ? options.mode : void 0) != null)) {
        MakeSync(browser, buildOptions(options.mode));
        browser.queue = null;
        return browser;
      }
    }
  };

  cleanArgs = function(ctx, cb) {
    if (typeof ctx === 'function') {
      cb = ctx;
      ctx = null;
    }
    if ((ctx != null ? ctx["with"] : void 0) != null) {
      ctx = ctx != null ? ctx["with"] : void 0;
    }
    return [ctx, cb];
  };

  Soda = function(ctx, cb) {
    var _ref1;
    _ref1 = cleanArgs(ctx, cb), ctx = _ref1[0], cb = _ref1[1];
    if (cb != null) {
      Sync(function() {
        return cb.apply(ctx, []);
      });
    }
    if (ctx) {
      return function(ctx2, cb2) {
        debugger;
        var _ref2;
        _ref2 = cleanArgs(ctx2, cb2), ctx2 = _ref2[0], cb2 = _ref2[1];
        if (!(ctx2 != null)) {
          ctx2 = ctx;
        }
        return Soda(ctx2, cb2);
      };
    }
  };

  exports.Soda = Soda;

  exports.soda = sodaSync;

}).call(this);
