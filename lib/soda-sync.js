// Generated by CoffeeScript 1.3.1
(function() {
  var MakeSync, Soda, SodaCan, Sync, buildOptions, patch, soda, sodaSync, _ref;

  soda = require("soda");

  _ref = require('make-sync'), MakeSync = _ref.MakeSync, Sync = _ref.Sync;

  buildOptions = function(mode) {
    if (!(mode != null)) {
      mode = 'sync';
    }
    return {
      mode: mode,
      exclude: '*',
      include: soda.commands.concat(['session']),
      error_type: 'callback'
    };
  };

  patch = function(browser, options) {
    if (((options != null ? options.mode : void 0) != null)) {
      MakeSync(browser, buildOptions(options.mode));
      browser.queue = null;
    }
    return browser;
  };

  sodaSync = {
    createClient: function(options) {
      return patch(soda.createClient(options), options);
    },
    createSauceClient: function(options) {
      return patch(soda.createSauceClient(options), options);
    },
    current: function() {
      return Fiber.current.soda_sync_browser;
    }
  };

  Soda = function(options, cb) {
    var _ref1;
    if (typeof options === 'function') {
      _ref1 = [null, options], options = _ref1[0], cb = _ref1[1];
    }
    if (cb != null) {
      Sync(function() {
        Fiber.current.soda_sync_browser = options != null ? options["with"] : void 0;
        return cb.apply(options != null ? options["with"] : void 0, []);
      });
    }
    if (options) {
      return function(options2, cb2) {
        var _ref2;
        if (typeof options2 === 'function') {
          _ref2 = [null, options2], options2 = _ref2[0], cb2 = _ref2[1];
        }
        if (!(options2 != null)) {
          options2 = options;
        }
        return Soda(options2, cb2);
      };
    }
  };

  SodaCan = function(options, cb) {
    var _ref1;
    if (typeof options === 'function') {
      _ref1 = [null, options], options = _ref1[0], cb = _ref1[1];
    }
    if (cb != null) {
      return function(done) {
        return Sync(function() {
          Fiber.current.soda_sync_browser = options != null ? typeof options["with"] === "function" ? options["with"]() : void 0 : void 0;
          cb.apply(options != null ? typeof options["with"] === "function" ? options["with"]() : void 0 : void 0, []);
          if (done != null) {
            return done();
          }
        });
      };
    }
    if (options) {
      return function(options2, cb2) {
        var _ref2;
        if (typeof options2 === 'function') {
          _ref2 = [null, options2], options2 = _ref2[0], cb2 = _ref2[1];
        }
        if (!(options2 != null)) {
          options2 = options;
        }
        return SodaCan(options2, cb2);
      };
    }
  };

  exports.Soda = Soda;

  exports.SodaCan = SodaCan;

  exports.soda = sodaSync;

}).call(this);
