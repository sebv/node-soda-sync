// Generated by CoffeeScript 1.3.1
(function() {
  var Soda, config, should, soda, _ref;

  should = require('should');

  _ref = require('../../lib/soda-sync'), soda = _ref.soda, Soda = _ref.Soda;

  config = null;

  try {
    config = require('./config');
  } catch (err) {

  }

  describe("soda-sync", function() {
    var browser;
    browser = null;
    it("create client", function(done) {
      should.exist(config, 'you need to configure your sauce username and access-key ' + 'in the file config.coffee.');
      browser = soda.createSauceClient({
        url: "http://www.google.com",
        username: config.saucelabs.username,
        "access-key": config.saucelabs['access-key'],
        os: "Linux",
        browser: "firefox",
        "browser-version": "3.",
        "max-duration": 300,
        name: "soda-sync sauce test",
        mode: 'sync'
      });
      browser.on('command', function(cmd, args) {
        return console.log(' \x1b[33m%s\x1b[0m: %s', cmd, args.join(', '));
      });
      return done();
    });
    return describe("all at once, without passing the browser to 'Soda'", function() {
      return it("should work", function(done) {
        this.timeout(90000);
        return Soda({
          "with": browser
        }, function() {
          this.session();
          this.open('/');
          this.type('q', 'Hello World');
          this.click('btnG');
          this.waitForElementPresent('css=#topstuff');
          this.getTitle().toLowerCase().should.include('hello world');
          browser.setContext("sauce:job-info={\"passed\": true}");
          this.testComplete();
          browser.jobUrl.should.include("jobs");
          return done();
        });
      });
    });
  });

}).call(this);
